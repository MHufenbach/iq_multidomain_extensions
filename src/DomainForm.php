<?php
namespace Drupal\iq_multidomain_extensions;

use Drupal\domain\DomainForm as OrigForm;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/**
 * Base form for domain edit forms.
 */
class DomainForm extends OrigForm
{

  public function form(array $form, FormStateInterface $form_state)
  {
    $form = parent::form($form, $form_state);
		$form['validate_url']['#default_value'] = false;
		$form['validate_url']['#type'] = 'hidden';

		//$form['hostname']['#type'] ='hidden';
		$form['hostname']['#field_suffix'] = '.' . getenv('DOMAIN_BASE');
		//$form['hostname']['#default_value'] = '';
		$form['hostname']['#default_value'] = str_replace('.' . getenv('DOMAIN_BASE') , '', $form['hostname']['#default_value']);
		//$form['id']['#type'] = 'hidden';
    /*$form['url_prefix'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('URL Prefix'),
      '#size' => 40,
      '#maxlength' => 80,
      '#default_value' => $this->entity->getThirdPartySetting('iq_multidomain_extensions', 'url_prefix', ''),
      '#description' => $this->t('URL Prefix for specific domain. Leave empty for main domain'),
    );*/

    return $form;
  }

  public function validateForm(array &$form, FormStateInterface $form_state)
	{
		$entity = $this->entity;
		$length = strlen($form['hostname']['#value'] . '.' . getenv('DOMAIN_BASE'));
		$entity->setHostname(substr($entity->getHostname() . $form['hostname']['#field_suffix'],0,$length));
		$form['hostname']['#value'] = $entity->getHostname();
		$form_state->setValue('hostname', $form['hostname']['#value']);
		parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
	}

	public function save(array $form, FormStateInterface $form_state)
  {
		parent::save($form, $form_state);
		//$this->entity->setThirdPartySetting('iq_multidomain_extensions', 'url_prefix', $form_state->getValue('url_prefix'));
		$form_state->setRedirect('iq_multidomain_extensions.settings');

  }
}
