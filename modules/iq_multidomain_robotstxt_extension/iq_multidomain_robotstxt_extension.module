<?php

/**
 * @file
 * Contains iq_multidomain_robotstxt_extension.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_config_schema_info_alter().
 *
 * Adds the robotstxt to the system.site mapping.
 */
function iq_multidomain_robotstxt_extension_config_schema_info_alter(&$definitions) {
  $definitions['system.site']['mapping']['robotstxt'] = [
    'type' => 'label',
    'label' => 'Robotstxt',
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds field for the robotstxt to the system_site_information_settings form.
 */
function iq_multidomain_robotstxt_extension_form_system_site_information_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!isset($form['iq_multidomain_extensions'])) {
    $form['iq_multidomain_extensions'] = [
      '#type' => 'details',
      '#title' => t('Iqual Multidomain Settings'),
      '#open' => TRUE,
    ];
  }

  // Get the domain id and the language set in the SwitchForm.
  [$domain, $language] = _iq_multidomain_extensions_get_domain_and_language();
  $default_value = _iq_multidomain_extensions_get_config_property_value('robotstxt', $domain, $language, TRUE);

  $form['iq_multidomain_extensions']['robotstxt'] = [
    '#type' => 'textarea',
    '#title' => t('Robots.txt file content'),
    '#default_value' => $default_value,
    '#description' => t("Custom robots.txt for domain. If this is not set, the default robotx.txt is used."),
  ];

  // Add an additional submit handler to save
  // the robotstxt value to the site config.
  $form['#submit'][] = 'iq_multidomain_robotstxt_extension_system_site_information_settings_submit';

}

/**
 * Form submission handler.
 */
function iq_multidomain_robotstxt_extension_system_site_information_settings_submit(array $form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('system.site')
    ->set('robotstxt', $form_state->getValue('robotstxt'))
    ->save();
}
