<?php

/**
 * @file
 * Iq_multidomain_extensions install and update hooks.
 */

use Drupal\domain\Entity\Domain;
use Drupal\file\Entity\File;

/**
 * Implements hook_install().
 */
function iq_multidomain_extensions_install() {
  module_set_weight('iq_multidomain_extensions', 999);
}

/**
 * Update settings name and delete old settings.
 */
function iq_multidomain_extensions_update_9000() {
  $oldConfig = \Drupal::configFactory()->getEditable('iq_multidomain_extensions.rancher_settings');
  $newConfig = \Drupal::configFactory()->getEditable('iq_multidomain_extensions.settings');

  $newConfig
    ->set('create_styling_profile', $oldConfig->get('create_styling_profile'))
    ->set('create_menu', $oldConfig->get('create_menu'))
    ->set('menu_content_types', $oldConfig->get('menu_content_types'))
    ->save();
  $oldConfig->delete();
}

/**
 * Install corresponding sub module if domain_theme_switch is enabled.
 */
function iq_multidomain_extensions_update_9001() {
  if (\Drupal::moduleHandler()->moduleExists('domain_theme_switch')) {
    /** @var \Drupal\Core\Extension\ModuleInstaller $module_installer */
    $module_installer = \Drupal::service('module_installer');
    $module_installer->install(['iq_multidomain_domain_theme_switch']);
  }
}

/**
 * Implements hook_update_N().
 *
 * Updates the favicons.
 */
function iq_multidomain_extensions_update_9002() {
  $domains = Domain::loadMultiple();
  $config_factory = Drupal::configFactory();
  $config = $config_factory->get('domain_site_settings.domainconfigsettings');

  foreach ($domains as $domain) {
    if ($favicon = $config->get($domain->id() . '.domain_favicon')) {
      $favicon_file = File::load(reset($favicon));
      if ($favicon_file) {
        /*
         * A custom favicon for a theme has the following elements (example):
         * - mimetype: image/vnd.microsoft.icon
         * - path: public://favicon.ico
         * - use_default: 0
         */
        $new_config = $config_factory->getEditable('domain.config.' . $domain->id() . '.iq_custom.settings');
        $new_config->set('favicon', [
          'mimetype' => $favicon_file->get('filemime')->first()->value,
          'path' => $favicon_file->get('uri')->first()->value,
          'use_default' => 0,
        ]);
        $new_config->save();
      }
    }
  }
}
